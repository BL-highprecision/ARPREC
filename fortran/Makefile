# Makefile.in generated by automake 1.10 from Makefile.am.
# fortran/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/arprec
pkglibdir = $(libdir)/arprec
pkgincludedir = $(includedir)/arprec
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin20.3.0
host_triplet = i386-apple-darwin20.3.0
subdir = fortran
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/second.f.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_qd.m4 \
	$(top_srcdir)/m4/ax_cxx_fc_lib.m4 \
	$(top_srcdir)/m4/ax_cxx_fma.m4 \
	$(top_srcdir)/m4/ax_f90_module_flag.m4 \
	$(top_srcdir)/m4/ax_f90_module_style.m4 \
	$(top_srcdir)/m4/ax_fc_backslash_flag.m4 \
	$(top_srcdir)/m4/ax_fc_etime.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/include/arprec/arprec_config.h
CONFIG_CLEAN_FILES = second.f
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkglibdir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libarprec_f_main_a_AR = $(AR) $(ARFLAGS)
libarprec_f_main_a_LIBADD =
am__libarprec_f_main_a_SOURCES_DIST = main.cpp
am_libarprec_f_main_a_OBJECTS = main.$(OBJEXT)
libarprec_f_main_a_OBJECTS = $(am_libarprec_f_main_a_OBJECTS)
libarprecmod_a_AR = $(AR) $(ARFLAGS)
libarprecmod_a_LIBADD =
am__libarprecmod_a_SOURCES_DIST = f_mp.cpp mp_mod.f mp_modm.f \
	mp_modx.f
am_libarprecmod_a_OBJECTS = f_mp.$(OBJEXT) \
	mp_mod.$(OBJEXT) mp_modm.$(OBJEXT) \
	mp_modx.$(OBJEXT)
libarprecmod_a_OBJECTS = $(am_libarprecmod_a_OBJECTS)
am__pslq1_SOURCES_DIST = tpslq1.f
am_pslq1_OBJECTS = tpslq1.$(OBJEXT)
nodist_pslq1_OBJECTS = second.$(OBJEXT)
pslq1_OBJECTS = $(am_pslq1_OBJECTS) $(nodist_pslq1_OBJECTS)
pslq1_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
pslq1_DEPENDENCIES = libarprec_f_main.a \
	libarprecmod.a \
	$(top_builddir)/src/libarprec.a \
	$(am__DEPENDENCIES_1)
am__pslq2_SOURCES_DIST = tpslq2.f
am_pslq2_OBJECTS = tpslq2.$(OBJEXT)
nodist_pslq2_OBJECTS = second.$(OBJEXT)
pslq2_OBJECTS = $(am_pslq2_OBJECTS) $(nodist_pslq2_OBJECTS)
pslq2_LDADD = $(LDADD)
pslq2_DEPENDENCIES = libarprec_f_main.a \
	libarprecmod.a \
	$(top_builddir)/src/libarprec.a \
	$(am__DEPENDENCIES_1)
am__pslq3_SOURCES_DIST = tpslq3.f
am_pslq3_OBJECTS = tpslq3.$(OBJEXT)
nodist_pslq3_OBJECTS = second.$(OBJEXT)
pslq3_OBJECTS = $(am_pslq3_OBJECTS) $(nodist_pslq3_OBJECTS)
pslq3_LDADD = $(LDADD)
pslq3_DEPENDENCIES = libarprec_f_main.a \
	libarprecmod.a \
	$(top_builddir)/src/libarprec.a \
	$(am__DEPENDENCIES_1)
am__pslqm1_SOURCES_DIST = tpslqm1.f
am_pslqm1_OBJECTS = tpslqm1.$(OBJEXT)
nodist_pslqm1_OBJECTS = second.$(OBJEXT)
pslqm1_OBJECTS = $(am_pslqm1_OBJECTS) $(nodist_pslqm1_OBJECTS)
pslqm1_LDADD = $(LDADD)
pslqm1_DEPENDENCIES = libarprec_f_main.a \
	libarprecmod.a \
	$(top_builddir)/src/libarprec.a \
	$(am__DEPENDENCIES_1)
am__pslqm2_SOURCES_DIST = tpslqm2.f
am_pslqm2_OBJECTS = tpslqm2.$(OBJEXT)
nodist_pslqm2_OBJECTS = second.$(OBJEXT)
pslqm2_OBJECTS = $(am_pslqm2_OBJECTS) $(nodist_pslqm2_OBJECTS)
pslqm2_LDADD = $(LDADD)
pslqm2_DEPENDENCIES = libarprec_f_main.a \
	libarprecmod.a \
	$(top_builddir)/src/libarprec.a \
	$(am__DEPENDENCIES_1)
am__pslqm3_SOURCES_DIST = tpslqm3.f
am_pslqm3_OBJECTS = tpslqm3.$(OBJEXT)
nodist_pslqm3_OBJECTS = second.$(OBJEXT)
pslqm3_OBJECTS = $(am_pslqm3_OBJECTS) $(nodist_pslqm3_OBJECTS)
pslqm3_LDADD = $(LDADD)
pslqm3_DEPENDENCIES = libarprec_f_main.a \
	libarprecmod.a \
	$(top_builddir)/src/libarprec.a \
	$(am__DEPENDENCIES_1)
am__quaderf_SOURCES_DIST = tquaderf.f
am_quaderf_OBJECTS = tquaderf.$(OBJEXT)
nodist_quaderf_OBJECTS = second.$(OBJEXT)
quaderf_OBJECTS = $(am_quaderf_OBJECTS) $(nodist_quaderf_OBJECTS)
quaderf_LDADD = $(LDADD)
quaderf_DEPENDENCIES = libarprec_f_main.a \
	libarprecmod.a \
	$(top_builddir)/src/libarprec.a \
	$(am__DEPENDENCIES_1)
am__quadgs_SOURCES_DIST = tquadgs.f
am_quadgs_OBJECTS = tquadgs.$(OBJEXT)
nodist_quadgs_OBJECTS = second.$(OBJEXT)
quadgs_OBJECTS = $(am_quadgs_OBJECTS) $(nodist_quadgs_OBJECTS)
quadgs_LDADD = $(LDADD)
quadgs_DEPENDENCIES = libarprec_f_main.a \
	libarprecmod.a \
	$(top_builddir)/src/libarprec.a \
	$(am__DEPENDENCIES_1)
am__quadts_SOURCES_DIST = tquadts.f
am_quadts_OBJECTS = tquadts.$(OBJEXT)
nodist_quadts_OBJECTS = second.$(OBJEXT)
quadts_OBJECTS = $(am_quadts_OBJECTS) $(nodist_quadts_OBJECTS)
quadts_LDADD = $(LDADD)
quadts_DEPENDENCIES = libarprec_f_main.a \
	libarprecmod.a \
	$(top_builddir)/src/libarprec.a \
	$(am__DEPENDENCIES_1)
am__roots_SOURCES_DIST = roots.f
am_roots_OBJECTS = roots.$(OBJEXT)
nodist_roots_OBJECTS = second.$(OBJEXT)
roots_OBJECTS = $(am_roots_OBJECTS) $(nodist_roots_OBJECTS)
roots_LDADD = $(LDADD)
roots_DEPENDENCIES = libarprec_f_main.a \
	libarprecmod.a \
	$(top_builddir)/src/libarprec.a \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
SOURCES = $(libarprec_f_main_a_SOURCES) $(libarprecmod_a_SOURCES) \
	$(pslq1_SOURCES) $(nodist_pslq1_SOURCES) $(pslq2_SOURCES) \
	$(nodist_pslq2_SOURCES) $(pslq3_SOURCES) \
	$(nodist_pslq3_SOURCES) $(pslqm1_SOURCES) \
	$(nodist_pslqm1_SOURCES) $(pslqm2_SOURCES) \
	$(nodist_pslqm2_SOURCES) $(pslqm3_SOURCES) \
	$(nodist_pslqm3_SOURCES) $(quaderf_SOURCES) \
	$(nodist_quaderf_SOURCES) $(quadgs_SOURCES) \
	$(nodist_quadgs_SOURCES) $(quadts_SOURCES) \
	$(nodist_quadts_SOURCES) $(roots_SOURCES) \
	$(nodist_roots_SOURCES)
DIST_SOURCES = $(am__libarprec_f_main_a_SOURCES_DIST) \
	$(am__libarprecmod_a_SOURCES_DIST) $(am__pslq1_SOURCES_DIST) \
	$(am__pslq2_SOURCES_DIST) $(am__pslq3_SOURCES_DIST) \
	$(am__pslqm1_SOURCES_DIST) $(am__pslqm2_SOURCES_DIST) \
	$(am__pslqm3_SOURCES_DIST) $(am__quaderf_SOURCES_DIST) \
	$(am__quadgs_SOURCES_DIST) $(am__quadts_SOURCES_DIST) \
	$(am__roots_SOURCES_DIST)
pkglibDATA_INSTALL = $(INSTALL_DATA)
DATA = $(pkglib_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/dhbailey/Documents/arprec-2.2.20/config/missing --run aclocal-1.10
AMTAR = ${SHELL} /Users/dhbailey/Documents/arprec-2.2.20/config/missing --run tar
AUTOCONF = ${SHELL} /Users/dhbailey/Documents/arprec-2.2.20/config/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/dhbailey/Documents/arprec-2.2.20/config/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/dhbailey/Documents/arprec-2.2.20/config/missing --run automake-1.10
AWK = awk
CC = c++
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CONFIGURE_ARGS = 
CONFIG_CXXFLAGS = 
CONFIG_FCFLAGS = 
CPPFLAGS = 
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O2 -Wall
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ETIME = etime
EXEEXT = 
F77 = gfortran
FC = gfortran
FCFLAGS = -O2 -ffree-form
FCLIBS =  -L/usr/local/gfortran/lib/gcc/x86_64-apple-darwin19/10.2.0 -L/usr/local/gfortran/lib/gcc/x86_64-apple-darwin19/10.2.0/../../.. -lgfortran -lquadmath -lm 
FFLAGS = -O2 -ffree-form
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/dhbailey/Documents/arprec-2.2.20/config/missing --run makeinfo
MKDIR_P = ../config/install-sh -c -d
OBJEXT = o
PACKAGE = arprec
PACKAGE_BUGREPORT = dhbailey@lbl.gov
PACKAGE_NAME = arprec
PACKAGE_STRING = arprec 2.2.1
PACKAGE_TARNAME = arprec
PACKAGE_VERSION = 2.2.1
PATH_SEPARATOR = :
QD_CONFIG = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 2.2.1
abs_builddir = /Users/dhbailey/Documents/arprec-2.2.20/fortran
abs_srcdir = /Users/dhbailey/Documents/arprec-2.2.20/fortran
abs_top_builddir = /Users/dhbailey/Documents/arprec-2.2.20
abs_top_srcdir = /Users/dhbailey/Documents/arprec-2.2.20
ac_ct_CC = c++
ac_ct_CXX = c++
ac_ct_FC = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
ax_f90_modflag = -I 
bindir = ${exec_prefix}/bin
build = i386-apple-darwin20.3.0
build_alias = 
build_cpu = i386
build_os = darwin20.3.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin20.3.0
host_alias = 
host_cpu = i386
host_os = darwin20.3.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/dhbailey/Documents/arprec-2.2.20/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/config/install-sh -c -d
module_ext = mod
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -I$(top_builddir) -I$(top_builddir)/include -I$(top_srcdir)/include
LDADD = libarprec_f_main.a libarprecmod.a $(top_builddir)/src/libarprec.a $(FCLIBS)
lib_LIBRARIES = libarprecmod.a libarprec_f_main.a
libarprecmod_a_SOURCES = f_mp.cpp mp_mod.f mp_modm.f mp_modx.f
libarprec_f_main_a_SOURCES = main.cpp
MPCOMPLEXMOD = mpcomplexmod.$(module_ext)
#MPCOMPLEXMOD = MPCOMPLEXMOD.$(module_ext)
MPDEFMOD = mpdefmod.$(module_ext)
#MPDEFMOD = MPDEFMOD.$(module_ext)
MPGENMOD = mpgenmod.$(module_ext)
#MPGENMOD = MPGENMOD.$(module_ext)
MPINTMOD = mpintmod.$(module_ext)
#MPINTMOD = MPINTMOD.$(module_ext)
MPMODULE = mpmodule.$(module_ext)
#MPMODULE = MPMODULE.$(module_ext)
MPMODULEM = mpmodulem.$(module_ext)
#MPMODULEM = MPMODULEM.$(module_ext)
MPMODULEX = mpmodulex.$(module_ext)
#MPMODULEX = MPMODULEX.$(module_ext)
MPREALMOD = mprealmod.$(module_ext)
#MPREALMOD = MPREALMOD.$(module_ext)
MODULES = $(MPCOMPLEXMOD) $(MPDEFMOD) $(MPGENMOD) $(MPINTMOD) \
	  $(MPMODULE) $(MPMODULEM) $(MPMODULEX) $(MPREALMOD)

pkglib_DATA = $(MODULES)
DEMO = pslq1$(EXEEXT) pslq2$(EXEEXT) pslq3$(EXEEXT) pslqm1$(EXEEXT) \
       pslqm2$(EXEEXT) pslqm3$(EXEEXT) quadgs$(EXEEXT) quaderf$(EXEEXT) \
       quadts$(EXEEXT) roots$(EXEEXT)

EXTRA_PROGRAMS = $(DEMO)
EXTRA_DIST = Makefile.sample
pslq1_SOURCES = tpslq1.f
nodist_pslq1_SOURCES = second.f
pslq1_LINK = $(CXXLINK)
pslq2_SOURCES = tpslq2.f
nodist_pslq2_SOURCES = second.f
pslq2_LINK = $(CXXLINK)
pslq3_SOURCES = tpslq3.f
nodist_pslq3_SOURCES = second.f
pslq3_LINK = $(CXXLINK)
pslqm1_SOURCES = tpslqm1.f
nodist_pslqm1_SOURCES = second.f
pslqm1_LINK = $(CXXLINK)
pslqm2_SOURCES = tpslqm2.f
nodist_pslqm2_SOURCES = second.f
pslqm2_LINK = $(CXXLINK)
pslqm3_SOURCES = tpslqm3.f
nodist_pslqm3_SOURCES = second.f
pslqm3_LINK = $(CXXLINK)
quadgs_SOURCES = tquadgs.f
nodist_quadgs_SOURCES = second.f
quadgs_LINK = $(CXXLINK)
quaderf_SOURCES = tquaderf.f
nodist_quaderf_SOURCES = second.f
quaderf_LINK = $(CXXLINK)
quadts_SOURCES = tquadts.f
nodist_quadts_SOURCES = second.f
quadts_LINK = $(CXXLINK)
roots_SOURCES = roots.f
nodist_roots_SOURCES = second.f
roots_LINK = $(CXXLINK)
CLEANFILES = $(MODULES) $(DEMO)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .f .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  fortran/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  fortran/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
second.f: $(top_builddir)/config.status $(srcdir)/second.f.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libarprec_f_main.a: $(libarprec_f_main_a_OBJECTS) $(libarprec_f_main_a_DEPENDENCIES) 
	-rm -f libarprec_f_main.a
	$(libarprec_f_main_a_AR) libarprec_f_main.a $(libarprec_f_main_a_OBJECTS) $(libarprec_f_main_a_LIBADD)
	$(RANLIB) libarprec_f_main.a
libarprecmod.a: $(libarprecmod_a_OBJECTS) $(libarprecmod_a_DEPENDENCIES) 
	-rm -f libarprecmod.a
	$(libarprecmod_a_AR) libarprecmod.a $(libarprecmod_a_OBJECTS) $(libarprecmod_a_LIBADD)
	$(RANLIB) libarprecmod.a
pslq1$(EXEEXT): $(pslq1_OBJECTS) $(pslq1_DEPENDENCIES) 
	@rm -f pslq1$(EXEEXT)
	$(pslq1_LINK) $(pslq1_OBJECTS) $(pslq1_LDADD) $(LIBS)
pslq2$(EXEEXT): $(pslq2_OBJECTS) $(pslq2_DEPENDENCIES) 
	@rm -f pslq2$(EXEEXT)
	$(pslq2_LINK) $(pslq2_OBJECTS) $(pslq2_LDADD) $(LIBS)
pslq3$(EXEEXT): $(pslq3_OBJECTS) $(pslq3_DEPENDENCIES) 
	@rm -f pslq3$(EXEEXT)
	$(pslq3_LINK) $(pslq3_OBJECTS) $(pslq3_LDADD) $(LIBS)
pslqm1$(EXEEXT): $(pslqm1_OBJECTS) $(pslqm1_DEPENDENCIES) 
	@rm -f pslqm1$(EXEEXT)
	$(pslqm1_LINK) $(pslqm1_OBJECTS) $(pslqm1_LDADD) $(LIBS)
pslqm2$(EXEEXT): $(pslqm2_OBJECTS) $(pslqm2_DEPENDENCIES) 
	@rm -f pslqm2$(EXEEXT)
	$(pslqm2_LINK) $(pslqm2_OBJECTS) $(pslqm2_LDADD) $(LIBS)
pslqm3$(EXEEXT): $(pslqm3_OBJECTS) $(pslqm3_DEPENDENCIES) 
	@rm -f pslqm3$(EXEEXT)
	$(pslqm3_LINK) $(pslqm3_OBJECTS) $(pslqm3_LDADD) $(LIBS)
quaderf$(EXEEXT): $(quaderf_OBJECTS) $(quaderf_DEPENDENCIES) 
	@rm -f quaderf$(EXEEXT)
	$(quaderf_LINK) $(quaderf_OBJECTS) $(quaderf_LDADD) $(LIBS)
quadgs$(EXEEXT): $(quadgs_OBJECTS) $(quadgs_DEPENDENCIES) 
	@rm -f quadgs$(EXEEXT)
	$(quadgs_LINK) $(quadgs_OBJECTS) $(quadgs_LDADD) $(LIBS)
quadts$(EXEEXT): $(quadts_OBJECTS) $(quadts_DEPENDENCIES) 
	@rm -f quadts$(EXEEXT)
	$(quadts_LINK) $(quadts_OBJECTS) $(quadts_LDADD) $(LIBS)
roots$(EXEEXT): $(roots_OBJECTS) $(roots_DEPENDENCIES) 
	@rm -f roots$(EXEEXT)
	$(roots_LINK) $(roots_OBJECTS) $(roots_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/f_mp.Po
include ./$(DEPDIR)/main.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.o:
	$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-pkglibDATA: $(pkglib_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkglibDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(pkglibDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

uninstall-pkglibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkglibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES install-pkglibDATA

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES uninstall-pkglibDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-pkglibDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLIBRARIES \
	uninstall-pkglibDATA


$(MPDEFMOD) $(MPINTMOD) $(MPREALMOD) $(MPCOMPLEXMOD) $(MPGENMOD) $(MPMODULE): mp_mod.o

mp_modm.o: mp_mod.o
$(MPMODULEM): mp_modm.o

mp_modx.o: mp_mod.o
$(MPMODULEX): mp_modx.o

demo: $(DEMO)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
